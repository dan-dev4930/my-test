import matplotlib.pyplot as plt
import numpy as np

def plot_circle(center, radius, color='b'):
    circle = plt.Circle(center, radius, color=color, fill=False)
    plt.gca().add_patch(circle)

def tangent_circle(c1, r1, c2, r2, c3, r3):
    # Calculate curvatures
    k12 = 2 / (1/r1 + 1/r2)
    k13 = 2 / (1/r1 + 1/r3)
    k23 = 2 / (1/r2 + 1/r3)

    # Calculate circle centers
    x = (c1[0] + c2[0] + c3[0]) / 3
    y = (c1[1] + c2[1] + c3[1]) / 3

    # Calculate radius
    r = abs((k12 + k13 + k23) / 2)

    return (x, y), r

# Given circles
c1 = (0, 0)
r1 = 1
c2 = (2, 0)
r2 = 1
c3 = (1, np.sqrt(3))
r3 = 1

# Plot given circles
plot_circle(c1, r1)
plot_circle(c2, r2)
plot_circle(c3, r3)

# Calculate and plot tangent circle
center, radius = tangent_circle(c1, r1, c2, r2, c3, r3)
plot_circle(center, radius, color='r')

plt.axis('equal')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Apollonian Gasket')
plt.grid(True)
plt.show()
